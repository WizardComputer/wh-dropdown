{"version":3,"file":"dropdown_test.js","sourceRoot":"","sources":["../src/test/dropdown_test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AACzC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAA;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AAEzC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;IACxB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;;;;qBAIb,CAAC,CAAA;QAElB,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAE;;;;;KAK3C,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;;;;qBAIlB,CAAa,CAAA;QAE9B,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAQ,CAAA;QAC7E,MAAM,CAAC,KAAK,EAAE,CAAA;QAEd,MAAM,OAAO,CAAC,cAAc,CAAA;QAC5B,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QAEpD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAA;IACrD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { expect } from '@esm-bundle/chai'\nimport { fixture, html } from '@open-wc/testing'\nimport { Dropdown } from \"../dropdown.js\"\n\nsuite(\"wh-dropdown\", () =>{\n  test(\"is defined\", () =>{\n    const el = document.createElement('wh-dropdown');\n    expect(el).to.be.an.instanceOf(Dropdown)\n  })\n\n  test(\"renders correct html\", async () =>{\n    const el = await fixture(html `\n      <wh-dropdown>\n        <span slot=\"button\">Button Name</span>\n        <wh-menu-item>Item</wh-menu-item>\n      </wh-dropdown>`)\n\n    expect(el.shadowRoot.innerHTML).to.include( `\n      <slot name=\"button\"></slot>\n      <ul class=\"\" style=\"margin-top: 0px; margin-left: 0px;\">\n          <slot></slot>\n      </ul>\n    `)\n  })\n\n  test(\"slot[name='button'] opens panel\", async () => {\n    const element = await fixture(html `\n      <wh-dropdown>\n        <span id=\"opener\" slot=\"button\">Button Name</span>\n        <wh-menu-item>Item</wh-menu-item>\n      </wh-dropdown>`) as Dropdown\n\n    const button = element.shadowRoot.querySelector('slot[name=\"button\"]') as any\n    button.click()\n\n    await element.updateComplete\n    const panel = element.shadowRoot.querySelector(\"ul\")\n\n    expect(panel.classList.contains(\"open\")).to.be.true\n  })\n})\n"]}
